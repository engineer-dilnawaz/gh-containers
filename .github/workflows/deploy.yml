name: Deployment (Container)
on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:
env:
  CACHE_KEY: node-deps
  MONGODB_DB_NAME: gha-demo
jobs:
  test:
    environment: testing
    runs-on: ubuntu-latest
    env:
      MONGODB_CONNECTION_PROTOCOL: mongodb+srv
      MONGODB_CLUSTER_ADDRESS: cluster0.h8jpwri.mongodb.net
      # MONGODB_URI: mongodb+srv://${{ secrets.MONGODB_USERNAME }}:${{ secrets.MONGODB_PASSWORD }}@cluster0.h8jpwri.mongodb.net/gha-demo?retryWrites=true&w=majority
      MONGODB_URI: mongodb+srv://dilnawazkhanengineer:2oS9cpSs7kTFGD0h@cluster0.h8jpwri.mongodb.net/gha-demo?retryWrites=true&w=majority
      # MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
      MONGODB_USERNAME: dilnawazkhanengineer
      # MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
      MONGODB_PASSWORD: 2oS9cpSs7kTFGD0h
      PORT: 8080
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      # - name: Run server
      #   run: npm start & npx wait-on http://127.0.0.1:$PORT # requires MongoDB Atlas to accept requests from anywhere!
      - name: Install MongoDB dependencies
        run: npm install mongodb mongoose

      - name: Verify MongoDB connection
        run: |
          # Test MongoDB connection directly
          npm install -g mongosh
          mongosh "$MONGODB_URI" --eval "db.runCommand({ ping: 1 })"

      - name: Run server with retries
        run: |
          # Retry logic for server startup
          for i in {1..5}; do
            npm start & npx wait-on http://127.0.0.1:$PORT && break || sleep 5
          done

      - name: Run tests
        run: npm test

      - name: Output information (debug)
        run: |
          echo "MONGODB_URI: mongodb+srv://${{ secrets.MONGODB_USERNAME }}:[REDACTED]@cluster0.h8jpwri.mongodb.net/gha-demo"
          echo "PORT: $PORT"
      - name: Run tests
        run: npm test
      - name: Output information
        run: |
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        env:
          PORT: 3000
        run: |
          echo "MONGODB_DB_NAME: $MONGODB_DB_NAME"
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
          echo "${{ env.PORT }}"
